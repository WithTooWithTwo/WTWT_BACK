name: CI/CD

on:
  push:
    branches:
      - main
      - dev
      - prod
  pull_request:
    branches:
      - main
      - dev
      - prod

permissions:
  contents: read
  checks: write

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      APPLICATION: ${{ github.ref == 'refs/heads/prod' &&  secrets.PROD_APPLICATION || secrets.DEV_APPLICATION }}
      ENVIRONMENT: ${{ github.ref == 'refs/heads/prod' && 'prod' ||'dev' }}
      CODE_DEPLOY_APP_NAME: ${{ github.ref == 'refs/heads/main' && secrets.CODE_DEPLOY_DEV_APP_NAME || secrets.CODE_DEPLOY_PROD_APP_NAME }}
      CODE_DEPLOY_GROUP_NAME: ${{ github.ref == 'refs/heads/main' && secrets.CODE_DEPLOY_DEV_GROUP_NAME || secrets.CODE_DEPLOY_PROD_GROUP_NAME }}

    steps:
      - name: Repository Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'corretto'

      - name: create applications.yml
        shell: bash
        run: |
          touch ./src/main/resources/application.yml
          echo "$APPLICATION" >> ./src/main/resources/application.yml

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      # CD
      - name: Make Zip File
        if: github.event_name == 'push'
        run: zip -qq -r ./$GITHUB_SHA.zip .

      - name: Configure AWS credentials
        if: github.event_name == 'push'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        if: github.event_name == 'push'
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://${{ secrets.S3_BUCKET_NAME }}/deploy/$ENVIRONMENT/$GITHUB_SHA.zip

      - name: Deploy with AWS codeDeploy
        if: github.event_name == 'push'
        run: aws deploy create-deployment
          --application-name $CODE_DEPLOY_APP_NAME
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name $CODE_DEPLOY_GROUP_NAME
          --s3-location bucket=${{ secrets.S3_BUCKET_NAME }},bundleType=zip,key=deploy/$ENVIRONMENT/$GITHUB_SHA.zip
